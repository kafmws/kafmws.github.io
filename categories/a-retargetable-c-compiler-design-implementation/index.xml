<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>A Retargetable C Compiler Design &amp; Implementation on kafm's blog</title><link>http://kafm.eu.org/categories/a-retargetable-c-compiler-design-implementation/</link><description>Recent content in A Retargetable C Compiler Design &amp; Implementation on kafm's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 16 Jun 2021 20:03:00 +0800</lastBuildDate><atom:link href="http://kafm.eu.org/categories/a-retargetable-c-compiler-design-implementation/index.xml" rel="self" type="application/rss+xml"/><item><title>Chapter2 Memory Management</title><link>http://kafm.eu.org/note/a-retargetable-c-compiler-design-implementation/chapter3-symbol-management/</link><pubDate>Wed, 16 Jun 2021 20:03:00 +0800</pubDate><guid>http://kafm.eu.org/note/a-retargetable-c-compiler-design-implementation/chapter3-symbol-management/</guid><description>Symbol Management 符号表概念 符号表是编译器保存信息的中心库，编译器的各部分通过符号表进行交互，并访问符号表中的数据——符号。 例如， 词法分析器把标识符加入标</description></item><item><title>Chapter2 Memory Management</title><link>http://kafm.eu.org/note/a-retargetable-c-compiler-design-implementation/chapter2-memory-management/</link><pubDate>Sun, 13 Jun 2021 20:31:00 +0800</pubDate><guid>http://kafm.eu.org/note/a-retargetable-c-compiler-design-implementation/chapter2-memory-management/</guid><description>Memory Management lcc 的内存管理 分配区的组成 内存分配过程 内存分配函数 实际分配过程 分配区的释放 字符串的存储 字符串函数 字符串存储 Programming Tips Memory Management 本章介绍了lcc的内存管</description></item><item><title>Notes for 《A Retargetable C Compiler Design &amp; Implementation》</title><link>http://kafm.eu.org/note/a-retargetable-c-compiler-design-implementation/readme/</link><pubDate>Sun, 13 Jun 2021 20:31:00 +0800</pubDate><guid>http://kafm.eu.org/note/a-retargetable-c-compiler-design-implementation/readme/</guid><description>README 本系列文章是经典书籍《A Retargetable C Compiler: Design And Implication 》 （《可变目标C编译器：设计与实现》）一书的读书笔记。摘录书中代码加以解释，并记录自己的一些思考。 笔记</description></item><item><title>Chapter1 Introduction</title><link>http://kafm.eu.org/note/a-retargetable-c-compiler-design-implementation/chapter1-introduction/</link><pubDate>Sun, 13 Jun 2021 18:59:00 +0800</pubDate><guid>http://kafm.eu.org/note/a-retargetable-c-compiler-design-implementation/chapter1-introduction/</guid><description>Introduction 本章讲述了本书的阅读方式，lcc的基本概况、设计理念、lcc的工作过程和lcc项目中使用的一些公共声明，主要包括一些兼容性宏及功能性宏。 与</description></item><item><title>Chapter2 Exercises</title><link>http://kafm.eu.org/note/a-retargetable-c-compiler-design-implementation/chapter2-exercises/</link><pubDate>Fri, 12 Mar 2021 17:15:00 +0800</pubDate><guid>http://kafm.eu.org/note/a-retargetable-c-compiler-design-implementation/chapter2-exercises/</guid><description>Chapter2 Exercises - 2.1 - 2.2 - 2.3 - 2.4 - 2.5 - 2.6 - 2.7 - 2.8 - 2.9 - 2.10 - 2.11 - 2.12 - 2.13 - 2.14 - 2.15 Chapter2 Exercises 2.1 使用C的库函数malloc和free修改allocate和deallo</description></item></channel></rss>